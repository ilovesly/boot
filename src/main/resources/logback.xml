<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<property name="SYS_LOG_DIR" value="d:/opt/app/boot/logs" />
	<property name="LOG_FILE" value="webloan.log" />
	<property name="fileLayoutPattern"
		value="%-20(%d{yyyyMMdd_HH:mm:ss.SSS} [%logger{10}][%thread] [%-4relative])				[%X{hostName} %X{requestId} %X{processId} %X{service.timing} ][%level] %msg%n" />
	<property name="consoleLayoutPattern"
		value="%-20(%d{yyyyMMdd_HH:mm:ss.SSS} [%logger][%thread] [%-4relative])				[%X{hostName} %X{requestId} %X{processId} %X{service.timing} ][%level] %msg%n" />

	<appender name="LOG_ROLLING"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${SYS_LOG_DIR}/debug.log</file>
		<filter class="ch.qos.logback.classic.filter.LevelFilter"> <!-- 日志过滤器，只记录warn级别日志 ,若要配置其他级别，复制appender，修改level，并在root中配置 -->
			<level>DEBUG</level>
			<onMatch>ACCEPT</onMatch>  
            <onMismatch>DENY</onMismatch>  	
		</filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${SYS_LOG_DIR}/%d{yyyy-MM-dd}/${LOG_FILE}_%d{yyyy-MM-dd}_%i.zip
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>50MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<layout>
			<pattern>${fileLayoutPattern}</pattern>
		</layout>
	</appender> 
	
	<appender name="LOG_ROLLING1"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${SYS_LOG_DIR}/info.log</file>
		<filter class="ch.qos.logback.classic.filter.LevelFilter"> <!-- 日志过滤器，只记录warn级别日志 ,若要配置其他级别，复制appender，修改level，并在root中配置 -->
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>  
            <onMismatch>DENY</onMismatch>  				
		</filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${SYS_LOG_DIR}/%d{yyyy-MM-dd}/${LOG_FILE}_%d{yyyy-MM-dd}_%i.zip
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>50MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<layout>
			<pattern>${fileLayoutPattern}</pattern>
		</layout>
	</appender> 
	
	<appender name="requestLog"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${SYS_LOG_DIR}/requestLog.log</file>
		<filter class="ch.qos.logback.classic.filter.LevelFilter"> <!-- 日志过滤器，只记录warn级别日志 ,若要配置其他级别，复制appender，修改level，并在root中配置 -->
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>  
            <onMismatch>DENY</onMismatch>  				
		</filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${SYS_LOG_DIR}/%d{yyyy-MM-dd}/${LOG_FILE}_%d{yyyy-MM-dd}_%i.zip
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>50MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<layout>
			<pattern>${fileLayoutPattern}</pattern>
		</layout>
	</appender> 	
	
	<appender name="sqlLog"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${SYS_LOG_DIR}/sqlLog.log</file>
		<filter class="ch.qos.logback.classic.filter.LevelFilter"> <!-- 日志过滤器，只记录warn级别日志 ,若要配置其他级别，复制appender，修改level，并在root中配置 -->
			<level>DEBUG</level>
			<onMatch>ACCEPT</onMatch>  
            <onMismatch>DENY</onMismatch>  				
		</filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${SYS_LOG_DIR}/%d{yyyy-MM-dd}/${LOG_FILE}_%d{yyyy-MM-dd}_%i.zip
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>50MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<layout>
			<pattern>${fileLayoutPattern}</pattern>
		</layout>
	</appender> 	
		
	
		
	
		<!-- 控制台输出 -->
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<layout name="StandardFormat" class="ch.qos.logback.classic.PatternLayout">
			<pattern>${consoleLayoutPattern}</pattern>
		</layout>
	</appender>
	
	<logger name="java.sql.PreparedStatement"  level="DEBUG" />
	<logger name="java.sql.Connection" level="DEBUG" />
	<logger name="java.sql.Statement"  additivity="false"  level="DEBUG" />
	<logger name="com.ibatis" level="DEBUG" />
	<logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG" />
	<logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG" />
	<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate"  level="DEBUG" />
			<!-- <logger name="org.springframework" level="ERROR" /> -->
	<logger name="net.sf.ehcache" level="ERROR" />	<!-- <logger name="org.mybatis.spring" level="ERROR"/> -->
	
	<logger name="gzm.demo.springboot.boot_feature.aspect.LogAopAction" additivity="false">
        <appender-ref ref="requestLog" />
    </logger>  
	<logger name="gzm.demo.springboot.boot_feature.aspect.SqlStatementInterceptor" additivity="false">
        <appender-ref ref="sqlLog" />
    </logger>      
	
	<root level="DEBUG">
		<appender-ref ref="CONSOLE" /> <!-- 控制台输出 -->
		<appender-ref ref="LOG_ROLLING" /> <!-- 文件输出 -->
		<appender-ref ref="LOG_ROLLING1" /> <!-- 文件输出 -->							
	</root>

</configuration>  
